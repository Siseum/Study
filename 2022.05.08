# 2022 05 08 Study

- JPA란 자바 진영의 ORM 표준 기술을 의미하며 인터페이스들의 모음이다.
- ORM이란 Object Relational Mapping을 의미하며 객체와 관계형 DB를 맵핑하는것을 의미한다.

- JAVA와 SQL을 연계해서 개발할 경우 SQL에 의존적인 개발을 해야되고
  객체 지향의 프로그래밍과 관계형 데이터 베이스는 프로그래밍 패러다임이 불일치 한다는 등 여러 문제점이 있다.
- JPA를 활용하여 자바에서 객체를 저장하듯이 DB에 저장한다.
- 하이버네이트란 JPA의 인터페이스를 구현한 오픈소스를 의미한다.

- JPA를 사용함으로써 얻는 장점은
  함수를 호출하는것으로 쿼리문을 대신할 수 있어 생산성이 높아진다 
  
  클래스의 맴버변수가 변경될경우 쿼리문을 수정해서 조회했어야 됐지만 
  JPA를 사용할경우 맴버변수만 수정하면 되므로 유지보수성이 좋아진다.
  
  상속 / 연관 관계 / 객체 그래프 탐색등의 패러다임 불일치 문제를 해결해준다.
  
  JPA는 애플리케이션과 데이터 베이스 사이의 다양한 성능 최적화 기능을 제공해준다.
  (지연로딩과 즉시로딩 기능을 제공해주는데 
   지연로딩은 객체가 실제 사용될때 로딩되는 기술을 의미하며
   즉시로딩은 JOIN SQL로 한번에 연관된 객체까지 미리 조회하는것을 의미한다)
  
  JPA는 애플리케이션과 데이터 베이스 사이에 추상화된 데이터 접근 계층을 제공하여 애플리케이션이
  특정 데이터베이스 기술에 종속되지 않도록 도와준다.

- @Entity란 JPA가 관리할 객체를 설정하는 어노테이션이다
 (Entity란 데이터베이스의 테이블과 매칭되는 개념이다)
 - @Id란 데이터베이스 PK(Primary Key)에 해당된다.
 
- Transaction이란 데이터베이스의 상태를 변화시키기 위한 작업 수행의 논리적 단위를 의미한다.
  JPA에서 데이터베이스의 내용을 변경할 경우 Transaction 사이에서 작업이 이루어져야 한다.
  
- EntityManager란 Entity를 관리하는 역할을 하는 클래스이다.
  EntityManager은 쓰레드간의 공유를 해서는 안되고 데이터 베이스 작업이 끝나면 버려야된다.

- EntityManagerFactory란 EntityManager를 생성하는 클래스이다.
  EntityManagerFactory는 하나만 생성해서 애플리케이션 전체에서 공유한다.
  
- JPQL이란 JPA에서 제공하는 SQL을 추상화한 객체지향 쿼리 언어이다.
  조회의 기능등 JPA 기능만으로 할 수 없는 작업들이 있으므로 JPA에서는 JPQL이라는 쿼리 언어를 제공한다.
  
  
  
  
