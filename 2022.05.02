# 2022 05 02 Study

1. JUnit 이란
- 자바에서 독립된 단위 테스트를 위한 프레임워크이다.

-TDD란 (Test-Driven-Development) 
 테스트 주도 개발이라고 한다.
 에러를 방지하기 위해 단위별로 검증하는 소프트웨어 개발 방법론이다.

- 단위테스트란 테스트가 가능한 작은 단위의 코드가 원하는 대로 동작을 하는지 검증하는 절차를 의미한다.

- Mokito란 개발자가 동작을 직접 제어할 수 있는 가짜 객체를 지원해주는 테스트 프레임워크이다
  @Mock 어노테이션은 Mock 객체를 만들어 반환해주는 어노테이션이다.
  @ExtendWith 어노테이션은 Mock 객체를 등록하고 사용하기 위해 사용하는 어노테이션이다.
  @Test 어노테이션은 테스트를 하는 메서드를 등록해주는 어노테이션이다
  @BeforeEach 어노테이션은 @Test 메서드가 호출되기전에 호출되는 메소드를 설정하는 어노테이션이다.

- Moking 이란 특정 객체가 제대로 작동하는지 테스트를 하기위해 특정 객체의 값을 사용자가 임의로 설정하는것을 의미한다.
  @Test 메서드가 실행될 경우 Moking을 한 객체는 사용자가 설정한대로 값이 설정되어 있기 때문에 해당 로직이 제대로 작동하는지 테스트가 가능하다.
  (Mokito.when().thenReturn() 메서드 등을 이용하여 특정 Mocking 객체에 값을 임의로 설정한다)
  
2. SpringFrameWork JUnit
- @SpringBootTest 어노테이션은 SpringContext를 이용하여 테스트를 하기 위한 어노테이션이다.
- @WebMvcTest 어노테이션은 Web Controller를 테스트를 하기 위한 어노테이션이다.(Controller 등)
  (@SpringBootTest 어노테이션은 모든 SpringBean을 가져와서 테스트를 하므로 실제 환경과 비슷하게 테스트가 가능하지만
   모든 SpringBean을 가져오므로 속도가 느릴수 있다는 단점이 있다.
   @WebMvcTest 어노테이션은 WebTest에 필요한 자원들만 갖고 테스트를 하므로 속도가 빠른 장점이 있으나
   실제 환경과 다르게 동작할 수 있다는 단점이 있다)
   
- @AutoConfigureWebMvc 어노테이션은 Mvc와 관련된 Bean을 설정하는 어노테이션이다.

- @MockBean 어노테이션이란 SpringBoot Context에 Mock 객체를 Spring Bean으로 등록하는 어노테이션이다.
- @AutoConfigureWebMvc 어노테이션은 WebMvcTest와 관련된 Spring Bean을 등록하는 어노테이션이다.

- 테스트할 클래스를 @Mock 어노테이션을 이용하여 Mock Bean으로 등록하고
  MockMvc 클래스를 이용하여 서버와 통신하는 코드와 객체에 대한 테스트를 한다.
  (MockMvc 클래스의 perform(), andExpect(), andDo() 메서드를 이용하여 서버와의 통신 테스트를 한다)

- Jacoco 라이브러리를 이용하여 코드의 범위를 확인할 수 있다.


3. Swagger
- Swagger란 개발한 RestApi를 편하게 문서화해주고 이를 통해 관리 및 제3의 이용자가 편하게 Api를 호출해보고 테스트할 수 있는 프레임워크를 의미한다.
- 어노테이션을 이용하여 개발한 RestApi 메서드에 특정 정보를 추가할때 Swagger를 이용한다.
  (@Api / @ApiParam / @ApiModelProperty / @ApiOperation / @ApiResponse / @ApiImplicitParams)
 
 
 
 
 
