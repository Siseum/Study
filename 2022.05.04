# 2022 05 04 Study

1. HTTP(Hyper Text Transfer Protocol)
- HTTP란 인터넷에서 데이터를 주고 받을 수 있는 프로토콜(통신 규약)을 의미한다.

- HTTP는 클라이언트와 서버로 구성되어 있는데 
  클라이언트에서는 Request(요청)을 보내고 서버에서는 클라이언트의 Request에 맞는 Response(응답)을 반환한다.
  클라이언트와 서버를 분리함으로써 유지 보수에 용이하다.

- 서버는 클라이언트의 상태를 보존하지 않는데 이는 Stateless라고 한다.
  Stateless의 장점은 클라이언트의 상태를 저장하지 않으므로 중간에 서버를 변경해도 된다는 장점이 있다
  (Stateful은 Stateless의 반대개념인데 서버에 클라이언트의 상태를 저장하므로 중간에 서버를 변경하지 않아야 된다는 단점이 있다)
   (서버를 변경할려면 변경한 서버에 클라이언트의 상태를 미리 알려줘야된다.)
 
- HTTP의 특징중 하나는 비 연결성이라는 특징이 있는데 
  비 연결성이란 클라이언트와 서버가 한번 연결을 맺은 후 클라이언트 요청에 대해 서버가 응답을 마치며 
  맺었던 연결을 끊어 버리는 성질을 의미한다.
  
- HTTP 메세지에 모든것을 전송한다
  HTTP 메세지에는 HTTP 헤더와 HTTP 바디등이 있는데
  HTTP 헤더에는 HTTP 전송에 필요한 모든 부가정보가 있고
  HTTP 바디에는 실제 전송할 데이터가 있다.
  
- Gradle이란 필요한 라이브러리를 가져오고 관리하는 툴이다.

2. MVC
- 웹 개발에서는 MVC 패턴을 이용하는데 MVC 패턴이란 Model / View / Controller 로 역할을 나누어서 개발하는 디자인 패턴이다
  Model에서는 데이터 관리 및 비즈니스 모델을 처리하는 부분이다.
  View에서는 비즈니스 모델 처리 결과를 통해 사용자 인터페이스가 표현되는 부분이다.
  Controller에서는 사용자의 요청을 처리하고 Model과 View를 연결해주는 역할을 한다.
  
- Model 객체는 key와 value로 구성되어 있으며 해당 view에 데이터를 전달하는 역할을 한다
  (view를 찾는 경로는 resources/templates 폴더의 view를 찾는다)
  
- View Resolver란 문자열로 반환된 View 네임을 확인하여 적절한 View를 찾아주는 역할을 한다.

- Controller에서 Model 객체의 값들을 설정하고 View 이름을 문자열로 return 한다
  그리고 return한 view 이름으로 View Resolver가 적절한 View를 찾아준다.
  
- Spring에서는 정적 컨텐츠는 서버에서 작업을 하지 않고 그대로 웹 브라우저에 전달한다
  (resources/static/.. 경로에 직접 html을 저장하여 정적 컨텐츠를 웹 브라우저에 전달해줄 수 있다)
 
 - Spring에서 MVC와 템플릿 엔진 이용하여 서버에서 html 파일을 수정하여 웹 브라우저에 전달할 수 있다.
 
 - API는 객체의 정보를 웹 브라우저로 전달할때 사용된다.
   API가 객체의 정보를 웹 브라우저로 전달할때 Json 방식으로 전달해준다.
   
 - @ResponseBody 어노테이션은 데이터 그 자체를 반환시키는 어노테이션이다
  (객체를 return 할 경우 Json으로 return 하고 Http Message Counter가 동작한다)
 
3. Service / Repository / 도메인 객체
- Service란 핵심 비즈니스 로직을 실행하는 역할이다.
- Repository란 데이터 베이스에 접근하고 도메인 객체를 DB에 저장하고 관리하는 역할을 한다.
- 도메인 객체란 비즈니스 로직에 필요한 엔티티를 표현하는 객체이다
  (비즈니스 로직이란 데이터 처리를 하는 프로그램의 일부분을 말한다)
  
 

