# 2022 05 06 Study

1. @Component
- @Component 어노테이션은 Spring Context에 Spring Bean을 등록하는 어노테이션이다
  (Spring Bean이란 스프링 프레임 워크에서 관리하는 자바 객체를 의미하며 Spring Bean은 싱글톤으로 생성되어 관리된다)
  
- @Configuration은 해당 클래스에서 스프링 빈을 등록할것이라고 알려주는 어노테이션이다
  @Bean 어노테이션은 해당 메서드에서 반환한 객체를 Spring Bean으로 등록하는 어노테이션이다.
  정형화되지 않거나 상황에 따라 구현 클래스를 변경해야될 상황이 있으면 자바 코드로 @Bean 어노테이션을 이용하여 Bean을 등록한다.
  (Bean이란 Spring에서 관리하는 자바 객체를 의미한다)
  
- @Controller 어노테이션은 MVC 패턴의 Controller를 생성하는 어노테이션이고 해당 클래스를 Spring Bean으로 등록한다.
- @Service 어노테이션은 해당 클래스에서 비즈니스 로직을 처리한다고 알려주는 어노테이션이고 해당 클래스를 Spring Bean으로 등록한다.
- @Repository 어노테이션은 해당 클래스에서 데이터를 관리하고 접근 수정하는 로직을 처리한다고 알려주는 어노테이션이고 해당 클래스를 Spring Bean으로 등록한다.

- @Autowired 어노테이션은 필요한 의존 객체 타입에 해당하는 Bean을 알아서 찾아서 대입해주는 어노테이션이다
  @Autowired는 생성자 / 필드 / Setter에서 사용이 가능하다.
  @Autowired를 사용할 경우 필드 주입보다 생성자 주입을 추천하는데
  생성자 주입을 할 경우 객체의 불변성을 확정할 수 있고 순환참조 에러를 런타임시에 확인할 수 있다는 장점이 있다.
  
- DI(Dependenty Injection)이란 어떤 클래스가 다른 클래스에 의존관계(has-a 관계 등)이 있을 경우 외부에서 의존 관계를 설정하는것을 의미한다.

- Controller에서 빈 Model 객체를 인자로 전달받을 수 있는데 해당 Controller에서 View에 전달할 정보(객체 등)를 Model에 등록하여
  Controller에서 반환한 View에 Model(정보)를 전달해 줄 수 있다.
  Controller에서 View로 어떤 저옵를 전달하고 싶을 때 Model 객체를 사용한다.
  
2. JDBC
- JDBC란 JAVA에서 DB 프로그래밍을 하기 위한 API를 의미한다
- JDBC Template란 JDBC에서 중복된 코드들을 줄여주는 템플릿을 의미한다.

- JPA란 JAVA 진영의 ORM 기술 표준을 의미하며 인터페이스의 모음이다.
  (JAP를 구현한 여러 오픈소스 중 Hibernate가 있다)
  (ORM이란 Object Relational Mapping을 의미하며 객체와 관계형 DB를 맵핑하는것을 의미한다)
  
- Transaction 이란 데이터 베이스의 상태를 변화시키기 위한 작업 수행의 논리적 단위를 의미한다.
- Transaction은 원자성 / 일관성 / 독립성 / 영속성의 특성이 있다

- Transaction의 원자성 특성은 Transaction의 수행결과가 데이터 베이스에 모두 반영이 되든지 모두 반영이 안되든지 해야되는 특성이다
- Transaction의 일관성 특성은 Transaction의 수행결과가 성공하면 언제나 일관성 있는 데이터 베이스의 상태로 변해야 된다는 특성이다
- Transaction의 독립성 특성은 수행중인 Transaction은 완전히 완료가 될때까지 다른 Transaction에서 결과를 참조할 수 없다는 특성이다
- Transaction의 영속성 특성은 성공적으로 완료된 Transaction의 결과는 데이터베이스에 영구적으로 반영되어야 된다는 특성이다.
  
  
  
