# 2022 05 26 Study

1. HTTP 메서드
   HTTP 메서드란 클라이언트와 서버 사이에서 이루어지는 요청과 응답 데이터를 전송하는 방식이다
   HTTP 헤더란 HTTP 전송에 필요한 모든 부가 정보를 의미한다
   예) 메세지 바디의 내용, 메세지 바디의 크기, 압축, 인증, 요청 클라이언트(브라우저)정보 등
   HTTP 바디란 실제 전송한 데이터를 의미한다
   예) HTML 문서, 이미지, 영상, JSON 등 byte로 표현할 수 있는 모든 데이터 전송이 가능하다

   URL(Uniform Resource Locator)이란 네트워크 상에서 자원이 어디 있는지를 알려주기 위한 규약이다.
   URI(Uniform Resource Identifier)이란 인터넷에 있는 자원을 나타내는 주소를 의미한다.
   
   URI를 설계하는데 중요한점은 리소스 식별이 가장 중요하다
   URI는 리소스만 식별하므로 리소스와 해당 리소스를 대상으로 하는 행위를 분리하는것이 좋다
   
   HTTP 메서드 종류에는
   GET : 리소스를 조회하는 메서드이다
   POST : 요청한 데이터를 처리한다 (주로 등록에 사용한다)
   PUT : 리소스를 대체한다 / 해당 리소스가 없으면 생성한다
   PATCH : 리소스를 부분적으로 변경한다
   DELETE : 리소스를 삭제한다
   
   GET 메서드는 리소스를 조회할때 사용하는 메서드이며 
   서버에 전달하고 싶은 데이터는 Query(쿼리 파라미터, 쿼리 스트링)을 통해서 전달한다.
   (메세지 바디를 사용해서 데이터를 전달할 수 있지만 지원하지 않는 곳이 많아 권장하지 않는다)
   
   POST 메서드는 요청 데이터를 처리하는 메서드이며
   메세지 바디를 통해서 서버로 요청 데이터를 전달한다.
   서버는 POST 메서드를 통해 전달한 메세지 바디의 내용을 갖고 처리한다
   POST 메서드는 전달된 데이터로 서버에 신규 리소스 등록을 하거나 프로세스 처리에 사용한다.
   (POST 메서드는 리소스가 설정한 처리방법에 따라 리소스를 처리한다)
   
   PUT 메서드는 리소스를 대체하는 메서드이며
   리소스가 있으면 새로 대체하며 리소스가 없을경우 새로 생성한다
   POST 메서드에서는 클라이언트에서 서버에서 처리된 URI를 모르며 서버에서 URI를 새로 생성하지만
   PUT메서드는 클라이언트가 리소스의 위치를 알고 URI를 설정한다
   
   HTTP 메서드의 속성에는 
   안전 / 멱등 / 캐쉬가능이 있다
   
   안전 속성은 호출해도 리소스를 변경하지 않는 특징이다 
   
   멱등 속성은 몇번을 호출하든 결과가 똑같다는게 특징이다
   (GET은 몇번을 조회하든 결과가 같고 PUT은 몇번을 호출해도 같은 결과로 대체된다
    POST는 여러번 처리를 할 경우 결과가 변경될 수 있으므로 멱등이 아니다)
    
    캐쉬가능 속성은 응답 결과 리소스를 캐시해서 사용해도 되는 것이 특징이다
    (GET, HEAD, POST, PATCH 메서드가 캐시가능 속성을 갖고 있으며 
     실제로는 GET, HEAD 정도만 캐시로 사용이 가능하다)
    (POST, PATCH는 본문 내용까지 키로 고려해야되는데 구현하기 쉽지 않다)
    
    
2. HTTP 메서드 활용
   클라이언트에서 서버로 데이터 전송을 할때 데이터 전달 방식은 크게 2가지가 있다
   쿼리 파라미터 / 메세지 바디를 통해 전송하는 방법이 있다
   
   GET 메소드는 쿼리 파라미터를 통해서 데이터를 전송한다
   POST / PUT / PATCH 메소드는 메세지 바디를 통해서 데이터를 전송한다.
   
   이미지 / 정적 텍스트 문서등 정적 데이터는 GET 메서드를 통해서 조회한다
   정적 데이터는 일반적으로 쿼리 파라미터 없이 리소스 경로로 단순하게 조회가 가능하다
   
   검색이나 정렬 필터 등 동적 데이터를 조회에서
   GET 메서드는 쿼리 파라미터를 사용해서 데이터를 전달한다.
   
   HTML Form으로 데이터를 전송할 경우 GET / POST 메서드만 지원해준다
   
   HTTP API로 데이터를 전송할 경우 
   POST / PUT / PATCH 메서드는 메세지 바디를 통해 데이터를 전송하고 
   GET 메서드는 쿼리 파라미터로 데이터를 전달한다

   HTTP API를 설계할때 컬랙션 / 스토어 / HTML FORM 방식으로 설계할 수 있다
   
   컬렉션이란 서버가 관리하는 리소스 디렉토리를 의미하며
   컬렉션 방식에서 리소스의 URI는 서버가 생성하고 관리한다
   
   스토어란 클라이언트가 관리하는 리소스 저장소를 의미하며
   스토어 방식에서 클라이언트가 리소스의 URI를 알고 있으며 URI를 생성하고 관리한다
   
   HTML FORM 방식은 GET 메소드와 POST 메소드만 지원해준다
   HTML FORM 방식에서 GET 메소드와 POST 메소드만 사용이 가능하므로 HTML API를 설계하는데 제약이 있다
   이러한 제약을 해결하기 위해 동사로 된 리소스 경로를 사용하는데 이러한 URI를 컨트롤 URI라고 한다
   POST의 /new, /edit 등이 컨트롤 URI이며 HTTP 메소드로 해결하기 애매한 경우 컨트롤 URI를 사용한다
   
   
   
